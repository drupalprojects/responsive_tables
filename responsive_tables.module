<?php

/**
 * @file
 * Defines responsive table libraries
 */

/**
 * Implements hook_library().
 */
function responsive_tables_library() {
  $path = libraries_get_path('MediaTable');

  $libraries['MediaTable'] = array(
    'title' => 'MediaTable Responsive Tables',
    'version' => '1.0',
    'js' => array(
      $path . '/jquery.mediaTable.js' => array(
        'scope' => 'footer',
      ),
      $path . '/respond.min.js' => array(
        'scope' => 'footer',
      ),
    ),
    'css' => array(
      $path . '/jquery.mediaTable.css' => array(
        'type' => 'file',
        'media' => 'screen',
        'scope' => 'footer',
      ),
    ),
  );

  $path = libraries_get_path('ZurbResponsiveTables');

  $libraries['ZurbResponsiveTables'] = array(
    'title' => 'Zurb Responsive Tables',
    'version' => '1.0',
    'js' => array(
      $path . '/responsive-tables.js' => array(
        'scope' => 'footer',
      ),
    ),
    'css' => array(
      $path . '/responsive-tables.css' => array(
        'type' => 'file',
        'media' => 'screen',
        'scope' => 'footer',
      ),
    ),
  );

  return $libraries;
}

/**
 * Implements hook_preprocess_views_view().
 */
function responsive_tables_preprocess_views_view(&$vars) {
  if (isset($vars['view']->style_plugin->options['responsify']) and $vars['view']->style_plugin->options['responsify'] == TRUE) {

    switch ($vars['view']->style_plugin->options['table_library']) {
      case 'ZurbResponsiveTables':
        drupal_add_library('responsive_tables', 'ZurbResponsiveTables');
        dpm($vars['view']);
      break;
      case 'MediaTable':
      default:
        drupal_add_library('responsive_tables', 'MediaTable');
        drupal_add_js('jQuery(document).ready(function() { jQuery(".view-dom-id-' . $vars['view']->dom_id . ' table").mediaTable(); });', array(
          'type' => 'inline',
        ));
    }
  }
}
